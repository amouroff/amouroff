(() => {
function randStr(len) {
  const chars = "abcdefghijklmnopqrstuvwxyz0123456789";
  return Array.from({length: len}, () => chars[Math.floor(Math.random() * chars.length)]).join('');
}
function setCookie(name, value, days = 365) {
  const d = new Date();
  d.setTime(d.getTime() + days*24*60*60*1000);
  document.cookie = `${name}=${value}; expires=${d.toUTCString()}; path=/; SameSite=Lax`;
}
function generateFakeCookies() {
  const variants = [
    () => setCookie("session_id", randStr(16)),
    () => setCookie("user_hash", randStr(24)),
    () => setCookie("visit_id", "v_" + randStr(10)),
    () => setCookie("ref_id", randStr(8)),
    () => setCookie("first_visit", Date.now() - Math.floor(Math.random() * 1e9)),
    () => setCookie("seen_tutorial", "true"),
    () => setCookie("prefs_theme", ["dark", "light"][Math.floor(Math.random()*2)]),
    () => setCookie("ab_test", "variant_" + Math.floor(Math.random() * 5)),
    () => setCookie("location_guess", ["ru", "ua", "by", "kz"][Math.floor(Math.random()*4)]),
    () => setCookie("utm_source", ["vk", "yandex", "telegram", "seo", "referral"][Math.floor(Math.random()*5)]),
    () => setCookie("returning_user", "yes"),
    () => setCookie("beta_user", Math.random() > 0.8 ? "true" : "false"),
    () => setCookie("track_id", randStr(12))
  ];
  const howMany = 5 + Math.floor(Math.random() * 5);
  variants.sort(() => 0.5 - Math.random()).slice(0, howMany).forEach(f => f());
}
function fakeStorage() {
  localStorage.setItem("user_session", randStr(32));
  localStorage.setItem("first_login", (Date.now() - Math.floor(Math.random() * 1e7)).toString());
  sessionStorage.setItem("campaign_clicks", Math.floor(Math.random() * 3).toString());
}
function simulateMouseMove() {
  const evt = new MouseEvent("mousemove", {
    bubbles: true,
    cancelable: true,
    clientX: Math.random() * window.innerWidth,
    clientY: Math.random() * window.innerHeight
  });
  document.dispatchEvent(evt);
}
function simulateScroll() {
  window.scrollTo({ top: Math.random() * document.body.scrollHeight, behavior: 'smooth' });
}
function simulateKeydown() {
  const keyEvt = new KeyboardEvent('keydown', { key: 'A', bubbles: true });
  document.dispatchEvent(keyEvt);
}
function simulateTouch() {
  try {
    const touch = new TouchEvent("touchstart", { bubbles: true });
    document.dispatchEvent(touch);
  } catch (e) {}
}
function simulateVisibility() {
  document.dispatchEvent(new Event("visibilitychange"));
}
function fakeAudio() {
  try {
    const ctx = new (window.AudioContext || window.webkitAudioContext)();
    const oscillator = ctx.createOscillator();
    oscillator.frequency.value = 440;
    oscillator.connect(ctx.destination);
    oscillator.start();
    oscillator.stop(ctx.currentTime + 0.3);
  } catch (e) {}
}
function fakeDomEvents() {
  const el = document.createElement("div");
  el.id = "fakeZone";
  el.style = "width:100px;height:100px;position:absolute;top:50px;left:50px;opacity:0;";
  document.body.appendChild(el);
  setTimeout(() => {
    el.dispatchEvent(new MouseEvent("mouseover", { bubbles: true }));
    el.dispatchEvent(new MouseEvent("click", { bubbles: true }));
  }, 2500);
}
console.log("Browser: Chrome 114.0.5735.199 | GPU: Enabled | WebGL OK");
console.log("User activity simulated at", new Date());
generateFakeCookies();
fakeStorage();
fakeAudio();
fakeDomEvents();
setTimeout(simulateMouseMove, 1000);
setTimeout(simulateScroll, 1500);
setTimeout(simulateKeydown, 2000);
setTimeout(simulateTouch, 2500);
setTimeout(simulateVisibility, 3000);
setInterval(simulateMouseMove, 5000);
setInterval(simulateScroll, 7000);
})();